{
    "docs": [
        {
            "location": "/", 
            "text": "Ricoh THETA V Plugin Application Development - Community Guide\n\n\n\n\nThis is a compilation of community experiences and tests from members of \ntheta360.guide\n, an\nindependent developer community for RICOH THETA cameras. This is not an\nofficial Ricoh group. The \ncommunity-created\n document you are reading may contain factual errors. For official information from Ricoh, please go to\n\nhttps://api.ricoh/docs/theta-plugin/\n.\n\n\nTHETA V Plugin Application Development Overview\n\n\nThe THETA V uses Android as the operating system. Because of this, the THETA V application development process is the same as the development process for an Android phone. Connect the THETA V to a development workstation, either Mac, Windows, or Linux with a micro USB cable and connect to the camera with adb. You will need a THETA V \nthat is in developer mode. To put your THETA V into developer mode during the closed-beta period, \nplease contact jcasman@oppkey.com. He will need\nto get physical access to your camera. More\ninformation on a process to put the THETA V into developer mode remotely should be available when the \nTHETA V partner program is launched in 2018 (specific date of launch has not been announced). \n\n\nThis document describes the following development process:\n\n\n\n\nAndroid SDK Installation\n\n\nImport Ricoh sample Plugin and Update Android Build System\n\n\nGetting a THETA V Plugin Development Camera\n\n\nUSB cable connection between THETA V and development workstation\n\n\nUsing adb to connect to the camera\n\n\nUse adb to install plugin into camera\n\n\nUse Vysor to help with testing\n\n\n\n\nRequired Hardware and Software for Development\n\n\n\n\nThe SDK was tested with a RICOH THETA V under the following conditions.\n\n\nCamera\n\n\nHardware\n\n\nRICOH THETA V\n\n\nFirmware\n\n\nver.2.20.1 and above\n\n\nInformation on checking and updating the firmware is \nhere\n.\n\n\n\n\n\n\n\n\n\n\nDevelopment Environment\n\n\nWindows 10 Version 1709\n\n\nIn Windows 7, adb connection does not work with USB\n\n\n\n\n\n\nmacOS High Sierra ver.10.13\n\n\nDevelopment \u30fb Build environment\n\n\nAndroid Studio 3.0+\n\n\ngradle 3.0.1\n\n\nAndroid SDK (API Level 25)\n\n\ncompileSdkVersion 26\n\n\nbuildToolsVersion \"26.0.3\"\n\n\nminSdkVersion 25\n\n\ntargetSdkVersion 25\n\n\n\n\n\n\n\n\n\n\nAndroid SDK Installation\n\n\nThis community guide has been tested with the Android SDK 3.0.1 and 3.1.1 on Windows 10 (1709) 64bit and Ubuntu 17.10. The process should be similar on Mac OS X.\n\n\nDownload Android Studio\n\n\nDownload Android Studio from the site below.\n\n\nhttps://developer.android.com/studio/index.html\n\n\n\n\n\n\nImport Ricoh Plugin SDK and Update Android Build System\n\n\nInstall Ricoh Plugin SDK and Update Android Build System.\n\n\n$ l\napp/          gradle/            gradlew      LICENSE.txt     README.md\nbuild.gradle  gradle.properties  gradlew.bat  pluginlibrary/  settings.gradle\n\n\n\nImport Project from File -\n New -\n Import Project.\n\n\n\n\n\n\nYou will see the following status bar for a few minutes.\n\n\n\n\nAfter the process completes, you will see a Windows Security Alert.\n\n\n\n\nAllow access to the OpenJDK Platform.\n\n\nYou may need to update your Build Tools. Install 26.0.3 or higher.\n\n\n\n\nAccept the license terms for 26.0.3 and press Next.\n\n\n\n\nThe components will be installed for you.\n\n\n\n\nAllow Gradle enough time to resync your project.\n\n\n\n\nAlthough not necessary, I decided to update Gradle.\n\n\n\n\nYou can now inspect your Project in the navigation area.\n\n\n\n\nBuild the APK\n\n\n\n\nAt the bottom of the Android Studio window, you will see the status of the build.\n\n\n\n\nClick on the status bar to show your Event Log and locate the APK.\n\n\n\n\nLocate the file \nplugin-debug.apk\n and install it onto the THETA V\n\n\n\n\nPutting Your THETA V into \u201cDeveloper Mode\u201d\n\n\nNormal THETA V cameras are not enabled for the development of plugins.\nAs of April 30, 2018, the THETA V plugin development process is in closed beta. \nTo discuss your plugin project, you can contact Ricoh directly\nor you can also contact the independent developer community at \nhttp://theta360.guide\n and they can forward your request to the appropriate people at Ricoh. \nAlternately, you can send an email to Jesse Casman at jcasman@oppkey.com for more information.\nPlease understand that only a small number of requests can be fulfilled.\n\n\nUSB cable connection between THETA V and development workstation\n\n\nWith the THETA off, connect it to your developer workstation with a USB cable.\n\n\n\n\nUsing adb to connect to the camera\n\n\nOn Windows, adb is installed into \n\n\nC:\\Users\\[user]\\AppData\\Local\\Android\\sdk\\platform-tools\n\n\n\n\n\nYou should add this into your PATH.  On Windows, you can edit the PATH with \nControl Panel -\n System and Security -\n System -\n Advanced system settings -\n Environment Variables -\n Path\n\n\n\n\nAfter putting adb into your \nPATH\n, start a new cmd shell and run \n\n\nadb devices -l\n\n\n\n\n\nIf you don't use \n-l\n, you can still identify the device by the serial number\nof your THETA V. In the example below, my THETA V has a serial number of 00101082.\n\n\n$ adb devices\nList of devices attached\n* daemon not running. starting it now at tcp:5037 *\n* daemon started successfully *\n00101082    device\n\n\n\nYou can log into the camera, and do an \nls\n to list all files, just like in any Android system\n\n\n$ adb shell\nmsm8953_64:/ $ ls -l                                                                                                                                                 \ntotal 4240\ndrwxrwxr-x   5 media_rw media_rw    4096 2017-01-01 00:00 DCIM\ndr-xr-xr-x  17 root     root           0 1970-04-02 10:08 acct\ndrwxr-xr-x   2 root     root          40 1970-01-01 00:00 bt_firmware                             \nlrwxrwxrwx   1 root     root          50 1970-01-01 00:00 bugreports -\n /data/user_de/0/com.android.shell/files/bugreports\ndrwxrwx---   6 system   cache       4096 2017-11-14 15:55 cache\nlrwxrwxrwx   1 root     root          13 1970-01-01 00:00 charger -\n /sbin/healthd\ndrwxr-xr-x   2 root     root           0 1970-04-02 10:08 config\nlrwxrwxrwx   1 root     root          17 1970-01-01 00:00 d -\n /sys/kernel/debug\ndrwxrwx--x  43 system   system      4096 2017-09-21 14:00 data\n-rw-r--r--   1 root     root         966 1970-01-01 00:00 default.prop\ndrwxr-xr-x  15 root     root        3180 2017-11-27 12:50 dev\ndrwxr-xr-x   3 root     root        4096 1970-01-01 00:00 dsp\n\n\n\nChange directory into DCIM. The RICOH THETA Plug-in SDK uses the\n\nandroid.hardware.Camera\n class. It saves images into the normal location you would expect from an Android device. You can also use the \nRICOH THETA API v2.1\n, which is is a WebAPI based on OSC to take pictures from your plug-in by sending a POST command to the internal camera web server.\n\n\n127|msm8953_64:/DCIM/0 $ ls -l\ntotal 128\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Alarms\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-09-22 22:31 Converted\ndrwxrwxr-x 3 media_rw media_rw  4096 2017-09-19 18:15 DCIM\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Download\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Movies\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-10-02 15:31 MtpOperation\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Music\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Notifications\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Pictures\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Podcasts\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Ringtones\n-rw-rw-r-- 1 media_rw media_rw 15972 2017-09-25 23:35 btsnoop_hci.log\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-09-21 14:26 ptp\n\n\n\nLocate pictures and movies.\n\n\nmsm8953_64:/DCIM/0/DCIM/100RICOH $\n\nmsm8953_64:/DCIM/0/DCIM/100RICOH $ ls -l                                                                                                             \ntotal 554752\n-rw-rw-r-- 1 media_rw media_rw   1970120 2017-09-28 12:58 R0010025.JPG\n-rw-rw-r-- 1 media_rw media_rw   2402374 2017-09-28 12:58 R0010026.JPG\n-rw-rw-r-- 1 media_rw media_rw   2136165 2017-09-28 12:58 R0010027.JPG\n-rw-rw-r-- 1 media_rw media_rw   2810985 2017-09-28 12:59 R0010028.JPG\n-rw-rw-r-- 1 media_rw media_rw   1834346 2017-10-18 18:34 R0010035.JPG\n-rw-rw-r-- 1 media_rw media_rw    679681 2017-10-21 12:13 R0010036.JPG\n-rw-rw-r-- 1 media_rw media_rw   2103925 2017-10-21 14:16 R0010037.JPG\n-rw-rw-r-- 1 media_rw media_rw  52108839 2017-10-21 14:19 R0010038.MP4\n-rw-rw-r-- 1 media_rw media_rw 108450224 2017-10-21 14:20 R0010039.MP4\n\n\n\nInstall Your Plugin into Camera\n\n\nUse Android Studio\nor\n\n\ncall \nadb install -r ./plugin/build/outputs/apk/debug/plugin-debug.apk\n\n\n$ adb install -r ./plugin/build/outputs/apk/debug/plugin-debug.apk \n* daemon not running. starting it now at tcp:5037 *\n* daemon started successfully *\nSuccess\n\n\n\nUse Vysor to help with testing\n\n\nGo to  \nhttps://www.vysor.io/\n \nand install Vysor.\n\n\n\n\nOn Linux, you can Vysor with the information \nhere\n.\n\n\nThe basic process is shown below.\n\n\ngit clone https://github.com/koush/electron-chrome.git\ncd electron-chrome\nnpm install\n\n\n\nUsing the Chrome Store app id for Vysor:\n\n\nelectron --enable-logging . --app-id=gidgenkbbabolejbgbpnhbimgjbffefm\n\n\n\n\n\nAfter starting Vysor, you will be able to choose your device, \nRICOH THETA_V\n.  Press \nView\n.\n\n\n\n\nVysor will start up.\n\n\n\n\nClick on the home button.\n\n\n\n\nAny launcher will work. I'm using the Snapdragon Launcher.\n\n\n\n\nYou will see all the apps.\n\n\n\n\nGo to App Settings\n\n\n\n\nSet Permissions for \nStorage\n and \nCamera\n.\n\n\n\n\nLaunch App\n\n\n\n\nThe Vysor screen will be black.", 
            "title": "Setup"
        }, 
        {
            "location": "/#ricoh-theta-v-plugin-application-development-community-guide", 
            "text": "This is a compilation of community experiences and tests from members of  theta360.guide , an\nindependent developer community for RICOH THETA cameras. This is not an\nofficial Ricoh group. The  community-created  document you are reading may contain factual errors. For official information from Ricoh, please go to https://api.ricoh/docs/theta-plugin/ .", 
            "title": "Ricoh THETA V Plugin Application Development - Community Guide"
        }, 
        {
            "location": "/#theta-v-plugin-application-development-overview", 
            "text": "The THETA V uses Android as the operating system. Because of this, the THETA V application development process is the same as the development process for an Android phone. Connect the THETA V to a development workstation, either Mac, Windows, or Linux with a micro USB cable and connect to the camera with adb. You will need a THETA V \nthat is in developer mode. To put your THETA V into developer mode during the closed-beta period, \nplease contact jcasman@oppkey.com. He will need\nto get physical access to your camera. More\ninformation on a process to put the THETA V into developer mode remotely should be available when the \nTHETA V partner program is launched in 2018 (specific date of launch has not been announced).   This document describes the following development process:   Android SDK Installation  Import Ricoh sample Plugin and Update Android Build System  Getting a THETA V Plugin Development Camera  USB cable connection between THETA V and development workstation  Using adb to connect to the camera  Use adb to install plugin into camera  Use Vysor to help with testing", 
            "title": "THETA V Plugin Application Development Overview"
        }, 
        {
            "location": "/#required-hardware-and-software-for-development", 
            "text": "The SDK was tested with a RICOH THETA V under the following conditions.  Camera  Hardware  RICOH THETA V  Firmware  ver.2.20.1 and above  Information on checking and updating the firmware is  here .      Development Environment  Windows 10 Version 1709  In Windows 7, adb connection does not work with USB    macOS High Sierra ver.10.13  Development \u30fb Build environment  Android Studio 3.0+  gradle 3.0.1  Android SDK (API Level 25)  compileSdkVersion 26  buildToolsVersion \"26.0.3\"  minSdkVersion 25  targetSdkVersion 25", 
            "title": "Required Hardware and Software for Development"
        }, 
        {
            "location": "/#android-sdk-installation", 
            "text": "This community guide has been tested with the Android SDK 3.0.1 and 3.1.1 on Windows 10 (1709) 64bit and Ubuntu 17.10. The process should be similar on Mac OS X.", 
            "title": "Android SDK Installation"
        }, 
        {
            "location": "/#download-android-studio", 
            "text": "Download Android Studio from the site below.  https://developer.android.com/studio/index.html", 
            "title": "Download Android Studio"
        }, 
        {
            "location": "/#import-ricoh-plugin-sdk-and-update-android-build-system", 
            "text": "Install Ricoh Plugin SDK and Update Android Build System.  $ l\napp/          gradle/            gradlew      LICENSE.txt     README.md\nbuild.gradle  gradle.properties  gradlew.bat  pluginlibrary/  settings.gradle  Import Project from File -  New -  Import Project.    You will see the following status bar for a few minutes.   After the process completes, you will see a Windows Security Alert.   Allow access to the OpenJDK Platform.  You may need to update your Build Tools. Install 26.0.3 or higher.   Accept the license terms for 26.0.3 and press Next.   The components will be installed for you.   Allow Gradle enough time to resync your project.   Although not necessary, I decided to update Gradle.   You can now inspect your Project in the navigation area.   Build the APK   At the bottom of the Android Studio window, you will see the status of the build.   Click on the status bar to show your Event Log and locate the APK.   Locate the file  plugin-debug.apk  and install it onto the THETA V", 
            "title": "Import Ricoh Plugin SDK and Update Android Build System"
        }, 
        {
            "location": "/#putting-your-theta-v-into-developer-mode", 
            "text": "Normal THETA V cameras are not enabled for the development of plugins.\nAs of April 30, 2018, the THETA V plugin development process is in closed beta. \nTo discuss your plugin project, you can contact Ricoh directly\nor you can also contact the independent developer community at  http://theta360.guide  and they can forward your request to the appropriate people at Ricoh. \nAlternately, you can send an email to Jesse Casman at jcasman@oppkey.com for more information.\nPlease understand that only a small number of requests can be fulfilled.", 
            "title": "Putting Your THETA V into \u201cDeveloper Mode\u201d"
        }, 
        {
            "location": "/#usb-cable-connection-between-theta-v-and-development-workstation", 
            "text": "With the THETA off, connect it to your developer workstation with a USB cable.   Using adb to connect to the camera  On Windows, adb is installed into   C:\\Users\\[user]\\AppData\\Local\\Android\\sdk\\platform-tools   You should add this into your PATH.  On Windows, you can edit the PATH with  Control Panel -  System and Security -  System -  Advanced system settings -  Environment Variables -  Path   After putting adb into your  PATH , start a new cmd shell and run   adb devices -l   If you don't use  -l , you can still identify the device by the serial number\nof your THETA V. In the example below, my THETA V has a serial number of 00101082.  $ adb devices\nList of devices attached\n* daemon not running. starting it now at tcp:5037 *\n* daemon started successfully *\n00101082    device  You can log into the camera, and do an  ls  to list all files, just like in any Android system  $ adb shell\nmsm8953_64:/ $ ls -l                                                                                                                                                 \ntotal 4240\ndrwxrwxr-x   5 media_rw media_rw    4096 2017-01-01 00:00 DCIM\ndr-xr-xr-x  17 root     root           0 1970-04-02 10:08 acct\ndrwxr-xr-x   2 root     root          40 1970-01-01 00:00 bt_firmware                             \nlrwxrwxrwx   1 root     root          50 1970-01-01 00:00 bugreports -  /data/user_de/0/com.android.shell/files/bugreports\ndrwxrwx---   6 system   cache       4096 2017-11-14 15:55 cache\nlrwxrwxrwx   1 root     root          13 1970-01-01 00:00 charger -  /sbin/healthd\ndrwxr-xr-x   2 root     root           0 1970-04-02 10:08 config\nlrwxrwxrwx   1 root     root          17 1970-01-01 00:00 d -  /sys/kernel/debug\ndrwxrwx--x  43 system   system      4096 2017-09-21 14:00 data\n-rw-r--r--   1 root     root         966 1970-01-01 00:00 default.prop\ndrwxr-xr-x  15 root     root        3180 2017-11-27 12:50 dev\ndrwxr-xr-x   3 root     root        4096 1970-01-01 00:00 dsp  Change directory into DCIM. The RICOH THETA Plug-in SDK uses the android.hardware.Camera  class. It saves images into the normal location you would expect from an Android device. You can also use the  RICOH THETA API v2.1 , which is is a WebAPI based on OSC to take pictures from your plug-in by sending a POST command to the internal camera web server.  127|msm8953_64:/DCIM/0 $ ls -l\ntotal 128\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Alarms\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-09-22 22:31 Converted\ndrwxrwxr-x 3 media_rw media_rw  4096 2017-09-19 18:15 DCIM\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Download\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Movies\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-10-02 15:31 MtpOperation\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Music\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Notifications\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Pictures\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Podcasts\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-01-01 00:00 Ringtones\n-rw-rw-r-- 1 media_rw media_rw 15972 2017-09-25 23:35 btsnoop_hci.log\ndrwxrwxr-x 2 media_rw media_rw  4096 2017-09-21 14:26 ptp  Locate pictures and movies.  msm8953_64:/DCIM/0/DCIM/100RICOH $\n\nmsm8953_64:/DCIM/0/DCIM/100RICOH $ ls -l                                                                                                             \ntotal 554752\n-rw-rw-r-- 1 media_rw media_rw   1970120 2017-09-28 12:58 R0010025.JPG\n-rw-rw-r-- 1 media_rw media_rw   2402374 2017-09-28 12:58 R0010026.JPG\n-rw-rw-r-- 1 media_rw media_rw   2136165 2017-09-28 12:58 R0010027.JPG\n-rw-rw-r-- 1 media_rw media_rw   2810985 2017-09-28 12:59 R0010028.JPG\n-rw-rw-r-- 1 media_rw media_rw   1834346 2017-10-18 18:34 R0010035.JPG\n-rw-rw-r-- 1 media_rw media_rw    679681 2017-10-21 12:13 R0010036.JPG\n-rw-rw-r-- 1 media_rw media_rw   2103925 2017-10-21 14:16 R0010037.JPG\n-rw-rw-r-- 1 media_rw media_rw  52108839 2017-10-21 14:19 R0010038.MP4\n-rw-rw-r-- 1 media_rw media_rw 108450224 2017-10-21 14:20 R0010039.MP4", 
            "title": "USB cable connection between THETA V and development workstation"
        }, 
        {
            "location": "/#install-your-plugin-into-camera", 
            "text": "Use Android Studio\nor  call  adb install -r ./plugin/build/outputs/apk/debug/plugin-debug.apk  $ adb install -r ./plugin/build/outputs/apk/debug/plugin-debug.apk \n* daemon not running. starting it now at tcp:5037 *\n* daemon started successfully *\nSuccess", 
            "title": "Install Your Plugin into Camera"
        }, 
        {
            "location": "/#use-vysor-to-help-with-testing", 
            "text": "Go to   https://www.vysor.io/  \nand install Vysor.   On Linux, you can Vysor with the information  here .  The basic process is shown below.  git clone https://github.com/koush/electron-chrome.git\ncd electron-chrome\nnpm install  Using the Chrome Store app id for Vysor:  electron --enable-logging . --app-id=gidgenkbbabolejbgbpnhbimgjbffefm   After starting Vysor, you will be able to choose your device,  RICOH THETA_V .  Press  View .   Vysor will start up.   Click on the home button.   Any launcher will work. I'm using the Snapdragon Launcher.   You will see all the apps.   Go to App Settings   Set Permissions for  Storage  and  Camera .   Launch App   The Vysor screen will be black.", 
            "title": "Use Vysor to help with testing"
        }, 
        {
            "location": "/use/", 
            "text": "Plugin Use\n\n\nIn the future, your plugin can be used by all THETA camera owners. They will\nbe able to install the plugin with a computer application that Ricoh\nwill provide.\n\n\nEnd-users can choose your plugin with the official RICOH THETA mobile app or a custom application that you provide.  For development, you can also select the\nactive plug-in with the WiFi API. \n\n\nTesting the Sample Plugin\n\n\nDisconnect the camera from the USB cable. Press the physical button on the camera. There will be no sound,\nbut the image will be captured. The plug-in will save the image to a file called \n/sdcard/DCIM/plugin.jpg\n.\n\n\nDownload the Picture\n\n\n$ adb pull /sdcard/DCIM/plugin.jpg\n/sdcard/DCIM/plugin.jpg: 1 file pulled. 21.2 MB/s (2790527 bytes in 0.126s)\n\n\n\nYou can also check the file in Vysor.\n\n\n\n\nPut Camera into Plugin Mode\n\n\nPlugin mode can only be enabled on\nthe RICOH THETA V.\n\n\nPlugins will not work on the THETA S (older model), THETA SC or THETA m15. \n\n\nEvery THETA V can be put into plugin mode by first turning the THETA V\non and then pressing the mode button. \n\n\n\n\nAfter pressing the mode button for 2 seconds, release it.\n\n\n\n\nThe \nCamera status lamp\n will turn solid white.\n\n\n\n\nAdditional information on the side buttons is shown below.\n\n\n\n\nInformation on the front of the camera is shown below.\n\n\n\n\nUse Vysor to Verify Plugin Installation\n\n\nYou can install multiple plugins into the THETA V. In the example below,\nI'm using Vysor to verify that I installed my new plugin \n\nConstructionPlugin\n in addition to the \nPluginSample\n I installed\nearlier.\n\n\n\n\nPrior to selecting with my new \nConstructionPlugin\n with the API, I set\nthe permissions with Vysor. Settings -\n Apps -\n YourAppName\n\n\n\n\nSet Active Plugin\n\n\nWhen you develop the plugin application, a companion mobile application can set the active plugin using the\nWiFi API of the camera. The Ricoh mobile application that\nmost of your users will also have can set the active plugin. For\ntesting, you can either use the Ricoh mobile app, build your own mobile app, or send a REST command\nusing an HTTP testing tool such as \n\ncurl\n  or \nPostman\n. In the example below, I am using \nRestlet Client, which is a browser-based Chrome tool similar to Postman.\n\n\nI am using THETA V firmware 1.20.1. This command may change in the future.  Use com.theta360.yourappname for the packageName. Note that in the example below, my package is called pluginsample.\n\n\n\n\nThis is the POST command:\n\n\nhttp://192.168.1.1/osc/commands/execute\n\n{\n    \"name\": \"camera._setPlugin\",\n    \"parameters\": {\n        \"packageName\": \"com.theta360.pluginsample\",\n        \"boot\": \"true\",\n        \"force\": \"false\"\n    }\n}\n\n\n\nNote that the command changed in firmware 1.20.1. The command \nwas previously \ncamera._setApplication\n and is deprecated, though it \nstill works in firmware 1.20.1.\n\n\nVerify Active Plugin with Mobile App\n\n\nUsing the Ricoh mobile app, you can see and select the\nactive plugin. \n\n\nConnect your RICOH THETA mobile app to your THETA V.\n\n\nGo to Settings.\n\n\n\n\nOn the \nSettings\n screen of your mobile app, click on\n\nCamera settings\n.\n\n\n\n\nOn your \nCamera settings\n screen you will be able to see your\nPlug-in. On the screen at the top of this section, my plug-in is called\n\nPluginSample\n.\n\n\n\n\nClick on the active plug-in name to display a choice\nof available plug-ins.\n\n\n\n\nThis process is current as of version 1.17.1 of the Android application.\n\n\n\n\nShow List of Plugins With API\n\n\nThe POST command:\n\n\n$ curl -X POST 192.168.1.1/osc/commands/execute --data '{\"name\":\"camera._listPlugins\"}' -H 'content-type: application/json'\n\n\n\nThe response\n\n\n{\n\"name\":\"camera._listPlugins\",\n\"results\":{\n    \"plugins\":[\n        {\n            \"applicationName\":\"Remote Playback\",\n            \"boot\":false,\n            \"bootOptions\":\"\",\n            \"force\":false,\n            \"foreground\":false,\n            \"packageName\":\"com.theta.remoteplayback\",\n            \"running\":false,\n            \"type\":\"extended\",\n            \"version\":\"1.00.20171106144412\"\n        },\n        {\n            \"applicationName\":\"PluginSample\",\n            \"boot\":true,\n            \"force\":false,\n            \"foreground\":false,\n            \"packageName\":\"com.theta360.pluginsample\",\n            \"running\":false,\n            \"type\":\"extended\",\n            \"version\":\"1.0\"\n        }\n    ]\n},\n\"state\":\"done\"\n}\n\n\n\n\n\nNote that this command was changed from \ncamera._listApplications\n, which is now deprecated", 
            "title": "Plugin Use"
        }, 
        {
            "location": "/use/#plugin-use", 
            "text": "In the future, your plugin can be used by all THETA camera owners. They will\nbe able to install the plugin with a computer application that Ricoh\nwill provide.  End-users can choose your plugin with the official RICOH THETA mobile app or a custom application that you provide.  For development, you can also select the\nactive plug-in with the WiFi API.", 
            "title": "Plugin Use"
        }, 
        {
            "location": "/use/#testing-the-sample-plugin", 
            "text": "Disconnect the camera from the USB cable. Press the physical button on the camera. There will be no sound,\nbut the image will be captured. The plug-in will save the image to a file called  /sdcard/DCIM/plugin.jpg .", 
            "title": "Testing the Sample Plugin"
        }, 
        {
            "location": "/use/#download-the-picture", 
            "text": "$ adb pull /sdcard/DCIM/plugin.jpg\n/sdcard/DCIM/plugin.jpg: 1 file pulled. 21.2 MB/s (2790527 bytes in 0.126s)  You can also check the file in Vysor.", 
            "title": "Download the Picture"
        }, 
        {
            "location": "/use/#put-camera-into-plugin-mode", 
            "text": "Plugin mode can only be enabled on\nthe RICOH THETA V.  Plugins will not work on the THETA S (older model), THETA SC or THETA m15.   Every THETA V can be put into plugin mode by first turning the THETA V\non and then pressing the mode button.    After pressing the mode button for 2 seconds, release it.   The  Camera status lamp  will turn solid white.   Additional information on the side buttons is shown below.   Information on the front of the camera is shown below.", 
            "title": "Put Camera into Plugin Mode"
        }, 
        {
            "location": "/use/#use-vysor-to-verify-plugin-installation", 
            "text": "You can install multiple plugins into the THETA V. In the example below,\nI'm using Vysor to verify that I installed my new plugin  ConstructionPlugin  in addition to the  PluginSample  I installed\nearlier.   Prior to selecting with my new  ConstructionPlugin  with the API, I set\nthe permissions with Vysor. Settings -  Apps -  YourAppName", 
            "title": "Use Vysor to Verify Plugin Installation"
        }, 
        {
            "location": "/use/#set-active-plugin", 
            "text": "When you develop the plugin application, a companion mobile application can set the active plugin using the\nWiFi API of the camera. The Ricoh mobile application that\nmost of your users will also have can set the active plugin. For\ntesting, you can either use the Ricoh mobile app, build your own mobile app, or send a REST command\nusing an HTTP testing tool such as  curl   or  Postman . In the example below, I am using \nRestlet Client, which is a browser-based Chrome tool similar to Postman.  I am using THETA V firmware 1.20.1. This command may change in the future.  Use com.theta360.yourappname for the packageName. Note that in the example below, my package is called pluginsample.   This is the POST command:  http://192.168.1.1/osc/commands/execute\n\n{\n    \"name\": \"camera._setPlugin\",\n    \"parameters\": {\n        \"packageName\": \"com.theta360.pluginsample\",\n        \"boot\": \"true\",\n        \"force\": \"false\"\n    }\n}  Note that the command changed in firmware 1.20.1. The command \nwas previously  camera._setApplication  and is deprecated, though it \nstill works in firmware 1.20.1.", 
            "title": "Set Active Plugin"
        }, 
        {
            "location": "/use/#verify-active-plugin-with-mobile-app", 
            "text": "Using the Ricoh mobile app, you can see and select the\nactive plugin.   Connect your RICOH THETA mobile app to your THETA V.  Go to Settings.   On the  Settings  screen of your mobile app, click on Camera settings .   On your  Camera settings  screen you will be able to see your\nPlug-in. On the screen at the top of this section, my plug-in is called PluginSample .   Click on the active plug-in name to display a choice\nof available plug-ins.   This process is current as of version 1.17.1 of the Android application.", 
            "title": "Verify Active Plugin with Mobile App"
        }, 
        {
            "location": "/use/#show-list-of-plugins-with-api", 
            "text": "The POST command:  $ curl -X POST 192.168.1.1/osc/commands/execute --data '{\"name\":\"camera._listPlugins\"}' -H 'content-type: application/json'  The response  {\n\"name\":\"camera._listPlugins\",\n\"results\":{\n    \"plugins\":[\n        {\n            \"applicationName\":\"Remote Playback\",\n            \"boot\":false,\n            \"bootOptions\":\"\",\n            \"force\":false,\n            \"foreground\":false,\n            \"packageName\":\"com.theta.remoteplayback\",\n            \"running\":false,\n            \"type\":\"extended\",\n            \"version\":\"1.00.20171106144412\"\n        },\n        {\n            \"applicationName\":\"PluginSample\",\n            \"boot\":true,\n            \"force\":false,\n            \"foreground\":false,\n            \"packageName\":\"com.theta360.pluginsample\",\n            \"running\":false,\n            \"type\":\"extended\",\n            \"version\":\"1.0\"\n        }\n    ]\n},\n\"state\":\"done\"\n}   Note that this command was changed from  camera._listApplications , which is now deprecated", 
            "title": "Show List of Plugins With API"
        }, 
        {
            "location": "/custom/", 
            "text": "Custom Development\n\n\nOverview\n\n\nYour primary way to control the camera is with the Android Camera class. Although this API was\ndeprecated in level 21, it still works. Make sure you use the older Camera class and not\nthe newer camera2 API.\n\n\nUse the offiical Android API documentation as your main reference.\n\n\nhttps://developer.android.com/reference/android/hardware/Camera.html\n\n\nThere are a set of THETA features that are not covered by the Android \n\nCamera\n\nAPI. These are covered by using \n\nCamera.Parameters\n\n\nExample:\n\n\nmParameters.set(\"RIC_PROC_STITCHING\", \"RicStaticStitching\");\nmCamera.setParameters(mParameters);\n\n\n\nHere's example of setting multiple parameters and then taking a picture.\n\n\n    public void takePicture() {\n        mParameters.setPictureSize(5376, 2688);\n        mParameters.set(\"RIC_SHOOTING_MODE\", \"RicStillCaptureStd\");\n        mParameters.set(\"RIC_EXPOSURE_MODE\", \"RicAutoExposureP\");\n        mParameters.set(\"recording-hint\", \"false\");\n        mParameters.setJpegThumbnailSize(320, 160);\n        mCamera.setParameters(mParameters);\n        mCamera.takePicture(null, null, mJpegPictureCallback);\n    }\n\n\n\nThe plug-in SDK is a great place to get started. The SDK can be downloaded from the theta360.com site. If\nyou have any problems finding the download location,\nplease send an email to jcasman@oppkey.com for\n friendly (I hope) help.  :-)\n\n\nUsing the WiFi Web API\n\n\nYour plug-in can also use the \n\nRICOH THETA API v2.1\n web API. Send POST commands \nto the camera's Web API at (http://localhost:8080/). When using the Web API from the plug-in, digest authentication is not required regardless of the wireless LAN mode. For detailed specifications of the Web API, please refer to \nAPI Reference - v2.1 - API \n SDK | RICOH THETA Developers\n\n\nThe Web API can not be used when the plug-in controls the camera device using the Camera API.\n\n\nConfiguration of Plug-in With Web Server\n\n\nIf you want to configure your plug-in with an external mobile app, one strategy is to embed an HTTP server into\nyour plug-in. A simple mobile app can then talk to the plug-in through the embedded HTTP server.\nWith this configuration strategy, the plug-in can launch a web server on port 8888 that provides a WebUI or its own API. \n\n\nYou must use port 8888 on the plug-in web server, as the other ports are blocked. You can then\nbuild a basic app on a smartphone to access the \nplug-in web server on the THETA V.\n\n\nDevelopers have reported success using NanoHttpd, which is available from GitHub at \n\nhttps://github.com/NanoHttpd/nanohttpd\n.\n\n\nAnother way to access the plug-in configuration page you create is to use the OpenPluginPage API from the Ricoh v2.1 WiFi API on port 80. It will redirect to port 8888.\n\n\nInformation on the OpenPluginPage API is available here:\n\n\nhttps://developers.theta360.com/en/docs/v2.1/api_reference/protocols/open_plugin_page.html\n\n\nYour app can look for the presence or absence of the web server by using the Web API's \ncamera._listPlugins\n. The information from camera._listPlugins consists of information described in the configuration file (\\assets\\settings.json) of each plug-in. If the setting file does not exist or the setting value is incorrect, the default value is written in the camera._listPlugins information. \n\n\nSample configuration file:\n\n\n{\n \nwebServer\n: true\n}\n\n\n\n\nFrom talking with the community, we think the process is shown below.\n\n\n\n\nCamera Hardware\n\n\n\n\nAPQ8053 (\nSnapdragon 625\n)\n\n\nCPU: Cortex A-53 x8\n\n\nGPU: Qualcomm AdrenoTM 506\n\n\n\n\n\n\n3GB LPDDR3 SDRAM, 32GB eMMC\n\n\nWLAN/BT (2 models)\n\n\n2.4GHz (1-11ch) only\n\n\n2.4GHz(1-11ch) + 5GHz(W52)\n\n\n\n\n\n\n12MP CMOS x2, 4ch MEMS microphones, 1ch speaker\n\n\n\n\nInternal Storage\n\n\nThe THETA V has a maximum storage size of 32GB. Developers can use 19GB  for storage of their plug-in applications and approximately 1.5GB for the plug-in itself. The partition for data is \n/data\n.\n\n\nThe sample code stores data to \nDCIM\n.\n\n\nThis is an example of saving all your images to a sub-directory \nConstruction\n and then\nadding a number to the file name. There's a separate bit of code to iterate the roomNumber.\n\n\nString fileUrl = \"/storage/emulated/0/DCIM/Construction/room\" + roomNumberStr + \"sect01.jpg\";\n\n\n\nDebugging\n\n\nYou can debug the THETA V with a USB cable and adb.\nThe camera will operate in Plugin Mode while connected to adb.\n\n\n\n\nYou will be able to get debug messages similar to the example below:\n\n\n   12-14 07:53:24.105  1171  1373 E TaskPersister: File error accessing recents directory (directory doesn't exist?).\n\n\n\nExample debug output with the camera connected to my Linux computer with a USB cable \nand in plug-in mode.\n\n\n\n\nSet Active Plugin\n\n\nTo set the active plugin, you can also use the WiFi API. To use \nthe WiFi API, you must connect your \ncomputer to the THETA with WiFi. \nAlthough you can use a curl script to switch plugins with the WiFi API,\nI find it easier to use a tool like \nRestlet Client to save my HTTP test scripts into a group. I can select an\nindividual test and run it with a push of a button. To switch plugins, I \nsaved a script for  \ncamera._setPlugin\n. You can geta list of plugins with \n\ncamera._listPlugins\n.\n\n\n\n\nIn addition to saving the HTTP test scripts, Restlet Client or Postman will show the\nJSON response in \npretty\n format automatically. With curl, you will need to\npipe the output to another tool to get \npretty print\n.\n\n\n\n\nFinishing a Plug-in\n\n\nPush and hold the Mode Button for 2 seconds to finish. When the plug-in detects that the Mode Button has been pressed for 2 seconds, it must quit. When the plug-in finishes, a \nnotification of termination for the plug-in\n must be made.\n\n\nCamera LEDs\n\n\nExample below shows camera turning on all LEDs.\n\n\nIntent ledon = new Intent(\"com.theta360.devicelibrary.receiver.ACTION_ADJ_LED\");\nledon.putExtra(\"ledNo\", 0);\nledon.putExtra(\"color\", \"on\");\nsendBroadcast(ledon);\n\n\n\nIn the example below, I tested turning on all the LEDs when a picture is \ntaken by pressing the shutter button.\n\n\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if (keyCode == KEYCODE_CAMERA) {\n        takePicture();\n        // \u201cledNo\u201d can be set LED number (0-8). 0 means all LEDs.\n        ledon.putExtra(\"ledNo\", 0);\n        // color can be \"on\", \"red\", \"green\", \"blue\"\n        ledon.putExtra(\"color\", \"on\");\n        sendBroadcast(ledon);\n    }\n\n\n\n\n\nSnippet below will turn all LEDs off.\n\n\nIntent ledoff = new Intent(\"com.theta360.devicelibrary.receiver.ACTION_ADJ_LED_OFF\");\nledoff.putExtra(\"ledNo\", 0);\nsendBroadcast(ledoff);\n\n\n\nCamera Buttons\n\n\nThere are three buttons you can map:\n\n\n\n\n\n\n\n\nButton\n\n\nCode\n\n\nLocation\n\n\n\n\n\n\n\n\n\n\nWiFi\n\n\n284\n\n\nside middle\n\n\n\n\n\n\nMode\n\n\n130\n\n\nside bottom\n\n\n\n\n\n\nShutter\n\n\n27\n\n\nfront\n\n\n\n\n\n\n\n\nIn the sample code, \nMainActivity.java\n has this at the top \n\n\npublic static final int KEYCODE_CAMERA = 27;\npublic static final int KEYCODE_MEDIA_RECORD = 130;\n\n\n\nFurther down in that same file, you'll see the trigger.\n\n\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if (keyCode == KEYCODE_CAMERA) {\n        takePicture();\n    }\n\n    return super.onKeyDown(keyCode, event);\n}\n\n\n\nBroadcast Examples\n\n\nBroadcast to sound error tone\n\n\ncom.theta360.devicelibrary.receiver.ACTION_AUDIO_WARNING\n\n\n\nBroadcast to launch shooting application after plugin finish\n\n\ncom.theta360.devicelibrary.receiver.ACTION_BOOT_BASIC\n\n\n\nStorage in eMMC\n\n\n/sdcard/DCIM/\n can be used.\n\n\nDual-Fish Still Image\n\n\nIf you want to save still images as dual-fisheye, use this parameter:\n\n\nmParameters.set(\"RIC_PROC_STITCHING_TYPE\", \"RicNonStitching\");\n\n\n\nThe size of the dual-fish image is 5792x2896. Use the command below:\n\n\nmParameters.setPictureSize(5792, 2896);\n\n\n\nThis article\n \nprovides more information on a plug-in built by community\ndeveloper Ichi Hirota.\n\n\nThe picture below is from Ichi Hirota.\n\n\n\n\n\n\nHere's example code from Ichi Hirota for bracketing.\n\n\n\n\nTroubleshooting\n\n\n\n\nForce power down\n\n\nPress WLAN + POWER buttons for 10 seconds\n\n\n\n\n\n\nWLAN reset\n\n\nPress WLAN button for 10 seconds\n\n\n\n\n\n\n\n\nProblems\n\n\nAt the time of writing this unofficial guide, the plug-in development \nenvironment is in closed beta. Problems listed here may be fixed by the \ntime you read this.\n\n\nXMP Data\n\n\n1/26/2018:\nIn my tests, the image did not have XMP data in it, so I'll need to add it \nin the future. There's also an uncomfirmed rumor that Ricoh is working\non a library to help with this.", 
            "title": "Custom Development"
        }, 
        {
            "location": "/custom/#custom-development", 
            "text": "", 
            "title": "Custom Development"
        }, 
        {
            "location": "/custom/#overview", 
            "text": "Your primary way to control the camera is with the Android Camera class. Although this API was\ndeprecated in level 21, it still works. Make sure you use the older Camera class and not\nthe newer camera2 API.  Use the offiical Android API documentation as your main reference.  https://developer.android.com/reference/android/hardware/Camera.html  There are a set of THETA features that are not covered by the Android  Camera \nAPI. These are covered by using  Camera.Parameters  Example:  mParameters.set(\"RIC_PROC_STITCHING\", \"RicStaticStitching\");\nmCamera.setParameters(mParameters);  Here's example of setting multiple parameters and then taking a picture.      public void takePicture() {\n        mParameters.setPictureSize(5376, 2688);\n        mParameters.set(\"RIC_SHOOTING_MODE\", \"RicStillCaptureStd\");\n        mParameters.set(\"RIC_EXPOSURE_MODE\", \"RicAutoExposureP\");\n        mParameters.set(\"recording-hint\", \"false\");\n        mParameters.setJpegThumbnailSize(320, 160);\n        mCamera.setParameters(mParameters);\n        mCamera.takePicture(null, null, mJpegPictureCallback);\n    }  The plug-in SDK is a great place to get started. The SDK can be downloaded from the theta360.com site. If\nyou have any problems finding the download location,\nplease send an email to jcasman@oppkey.com for\n friendly (I hope) help.  :-)", 
            "title": "Overview"
        }, 
        {
            "location": "/custom/#using-the-wifi-web-api", 
            "text": "Your plug-in can also use the  RICOH THETA API v2.1  web API. Send POST commands \nto the camera's Web API at (http://localhost:8080/). When using the Web API from the plug-in, digest authentication is not required regardless of the wireless LAN mode. For detailed specifications of the Web API, please refer to  API Reference - v2.1 - API   SDK | RICOH THETA Developers  The Web API can not be used when the plug-in controls the camera device using the Camera API.", 
            "title": "Using the WiFi Web API"
        }, 
        {
            "location": "/custom/#configuration-of-plug-in-with-web-server", 
            "text": "If you want to configure your plug-in with an external mobile app, one strategy is to embed an HTTP server into\nyour plug-in. A simple mobile app can then talk to the plug-in through the embedded HTTP server.\nWith this configuration strategy, the plug-in can launch a web server on port 8888 that provides a WebUI or its own API.   You must use port 8888 on the plug-in web server, as the other ports are blocked. You can then\nbuild a basic app on a smartphone to access the \nplug-in web server on the THETA V.  Developers have reported success using NanoHttpd, which is available from GitHub at  https://github.com/NanoHttpd/nanohttpd .  Another way to access the plug-in configuration page you create is to use the OpenPluginPage API from the Ricoh v2.1 WiFi API on port 80. It will redirect to port 8888.  Information on the OpenPluginPage API is available here:  https://developers.theta360.com/en/docs/v2.1/api_reference/protocols/open_plugin_page.html  Your app can look for the presence or absence of the web server by using the Web API's  camera._listPlugins . The information from camera._listPlugins consists of information described in the configuration file (\\assets\\settings.json) of each plug-in. If the setting file does not exist or the setting value is incorrect, the default value is written in the camera._listPlugins information.   Sample configuration file:  {\n  webServer : true\n}  From talking with the community, we think the process is shown below.", 
            "title": "Configuration of Plug-in With Web Server"
        }, 
        {
            "location": "/custom/#camera-hardware", 
            "text": "APQ8053 ( Snapdragon 625 )  CPU: Cortex A-53 x8  GPU: Qualcomm AdrenoTM 506    3GB LPDDR3 SDRAM, 32GB eMMC  WLAN/BT (2 models)  2.4GHz (1-11ch) only  2.4GHz(1-11ch) + 5GHz(W52)    12MP CMOS x2, 4ch MEMS microphones, 1ch speaker", 
            "title": "Camera Hardware"
        }, 
        {
            "location": "/custom/#internal-storage", 
            "text": "The THETA V has a maximum storage size of 32GB. Developers can use 19GB  for storage of their plug-in applications and approximately 1.5GB for the plug-in itself. The partition for data is  /data .  The sample code stores data to  DCIM .  This is an example of saving all your images to a sub-directory  Construction  and then\nadding a number to the file name. There's a separate bit of code to iterate the roomNumber.  String fileUrl = \"/storage/emulated/0/DCIM/Construction/room\" + roomNumberStr + \"sect01.jpg\";", 
            "title": "Internal Storage"
        }, 
        {
            "location": "/custom/#debugging", 
            "text": "You can debug the THETA V with a USB cable and adb.\nThe camera will operate in Plugin Mode while connected to adb.   You will be able to get debug messages similar to the example below:     12-14 07:53:24.105  1171  1373 E TaskPersister: File error accessing recents directory (directory doesn't exist?).  Example debug output with the camera connected to my Linux computer with a USB cable \nand in plug-in mode.", 
            "title": "Debugging"
        }, 
        {
            "location": "/custom/#set-active-plugin", 
            "text": "To set the active plugin, you can also use the WiFi API. To use \nthe WiFi API, you must connect your \ncomputer to the THETA with WiFi. \nAlthough you can use a curl script to switch plugins with the WiFi API,\nI find it easier to use a tool like \nRestlet Client to save my HTTP test scripts into a group. I can select an\nindividual test and run it with a push of a button. To switch plugins, I \nsaved a script for   camera._setPlugin . You can geta list of plugins with  camera._listPlugins .   In addition to saving the HTTP test scripts, Restlet Client or Postman will show the\nJSON response in  pretty  format automatically. With curl, you will need to\npipe the output to another tool to get  pretty print .", 
            "title": "Set Active Plugin"
        }, 
        {
            "location": "/custom/#finishing-a-plug-in", 
            "text": "Push and hold the Mode Button for 2 seconds to finish. When the plug-in detects that the Mode Button has been pressed for 2 seconds, it must quit. When the plug-in finishes, a  notification of termination for the plug-in  must be made.", 
            "title": "Finishing a Plug-in"
        }, 
        {
            "location": "/custom/#camera-leds", 
            "text": "Example below shows camera turning on all LEDs.  Intent ledon = new Intent(\"com.theta360.devicelibrary.receiver.ACTION_ADJ_LED\");\nledon.putExtra(\"ledNo\", 0);\nledon.putExtra(\"color\", \"on\");\nsendBroadcast(ledon);  In the example below, I tested turning on all the LEDs when a picture is \ntaken by pressing the shutter button.  public boolean onKeyDown(int keyCode, KeyEvent event) {\n    if (keyCode == KEYCODE_CAMERA) {\n        takePicture();\n        // \u201cledNo\u201d can be set LED number (0-8). 0 means all LEDs.\n        ledon.putExtra(\"ledNo\", 0);\n        // color can be \"on\", \"red\", \"green\", \"blue\"\n        ledon.putExtra(\"color\", \"on\");\n        sendBroadcast(ledon);\n    }   Snippet below will turn all LEDs off.  Intent ledoff = new Intent(\"com.theta360.devicelibrary.receiver.ACTION_ADJ_LED_OFF\");\nledoff.putExtra(\"ledNo\", 0);\nsendBroadcast(ledoff);", 
            "title": "Camera LEDs"
        }, 
        {
            "location": "/custom/#camera-buttons", 
            "text": "There are three buttons you can map:     Button  Code  Location      WiFi  284  side middle    Mode  130  side bottom    Shutter  27  front     In the sample code,  MainActivity.java  has this at the top   public static final int KEYCODE_CAMERA = 27;\npublic static final int KEYCODE_MEDIA_RECORD = 130;  Further down in that same file, you'll see the trigger.  public boolean onKeyDown(int keyCode, KeyEvent event) {\n    if (keyCode == KEYCODE_CAMERA) {\n        takePicture();\n    }\n\n    return super.onKeyDown(keyCode, event);\n}", 
            "title": "Camera Buttons"
        }, 
        {
            "location": "/custom/#broadcast-examples", 
            "text": "Broadcast to sound error tone  com.theta360.devicelibrary.receiver.ACTION_AUDIO_WARNING  Broadcast to launch shooting application after plugin finish  com.theta360.devicelibrary.receiver.ACTION_BOOT_BASIC", 
            "title": "Broadcast Examples"
        }, 
        {
            "location": "/custom/#storage-in-emmc", 
            "text": "/sdcard/DCIM/  can be used.", 
            "title": "Storage in eMMC"
        }, 
        {
            "location": "/custom/#dual-fish-still-image", 
            "text": "If you want to save still images as dual-fisheye, use this parameter:  mParameters.set(\"RIC_PROC_STITCHING_TYPE\", \"RicNonStitching\");  The size of the dual-fish image is 5792x2896. Use the command below:  mParameters.setPictureSize(5792, 2896);  This article  \nprovides more information on a plug-in built by community\ndeveloper Ichi Hirota.  The picture below is from Ichi Hirota.    Here's example code from Ichi Hirota for bracketing.", 
            "title": "Dual-Fish Still Image"
        }, 
        {
            "location": "/custom/#troubleshooting", 
            "text": "Force power down  Press WLAN + POWER buttons for 10 seconds    WLAN reset  Press WLAN button for 10 seconds", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/custom/#problems", 
            "text": "At the time of writing this unofficial guide, the plug-in development \nenvironment is in closed beta. Problems listed here may be fixed by the \ntime you read this.", 
            "title": "Problems"
        }, 
        {
            "location": "/custom/#xmp-data", 
            "text": "1/26/2018:\nIn my tests, the image did not have XMP data in it, so I'll need to add it \nin the future. There's also an uncomfirmed rumor that Ricoh is working\non a library to help with this.", 
            "title": "XMP Data"
        }, 
        {
            "location": "/concept/", 
            "text": "Plugin Ideas\n\n\nThese are ideas for plugins to help with brainstorm discussions. \nThey have not been implemented.\n\n\n\n\n\n\n\n\n\n\nExample Construction Concept\n\n\nI created a new plugin called \nConstructionPlugin\n to\nreduce the time taken to take hundreds of images at construction sites.\n\n\nThe idea is to use a separate application to create a route of rooms.\nThe plugin then saves unique files names for each room.\n\n\n\n\nAs a first step, the plugin saves the construction images\nwith a file name prefaced by \nconstruction\n.\n\n\n\n\nI then created a directory called \nConstruction\n to store\nall my construction pictures for business \nseparately from the normal camera pictures stored in \n100RICOH\n.\nI am using a more scalable naming convention of the form\n \nroom01sect01.jpg\n.\n\n\nIn \nMainFragment.java\n, I changed the file save location.\n\n\nprivate Camera.PictureCallback mJpegPictureCallback = new Camera.PictureCallback() {\n    @Override\n    public void onPictureTaken(byte[] data, Camera camera) {\n        mParameters.set(\"RIC_PROC_STITCHING\", \"RicStaticStitching\");\n        mCamera.setParameters(mParameters);\n        mCamera.stopPreview();\n\n        String fileUrl = \"/storage/emulated/0/DCIM/Construction/room01sect01.jpg\";\n        try (FileOutputStream fileOutputStream = new FileOutputStream(fileUrl)) {\n            fileOutputStream.write(data);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        mCamera.startPreview();\n    }\n};\n\n\n\nUsing \nadb shell\n, I can log into the camera and make sure that it's saving the file in the correct filename format and directory. On the camera, you can access it in \n/mnt/sdcard/DCIM/Construction/\n\n\n\n\nBack on my workstation, I can copy all the construction images from the camera to my workstation with:\n\n\n$ adb pull /sdcard/DCIM/Construction/\n\n\n\n\n\nIn this test, transferring 13 images took 1.9 seconds using a USB cable. \nThe files total 42 MB. Each image has a resolution of 5376x2896.\n\nOnce I have the image on my workstation, I can then open the image up in a file browser to\nsee it in equirectangular format.\n\n\n\n\n\n\nMy code snippet now looks like this:\n\n\nif (roomNumber \n 9)\n{\n    roomNumberStr = Integer.toString(roomNumber);\n} else {\n    roomNumberStr = \"0\" + Integer.toString(roomNumber);\n\n}\n\n\nString fileUrl = \"/storage/emulated/0/DCIM/Construction/room\" + roomNumberStr + \"sect01.jpg\";\ntry (FileOutputStream fileOutputStream = new FileOutputStream(fileUrl)) {\n    fileOutputStream.write(data);\n    roomNumber = roomNumber + 1;", 
            "title": "Concept Ideas"
        }, 
        {
            "location": "/concept/#plugin-ideas", 
            "text": "These are ideas for plugins to help with brainstorm discussions. \nThey have not been implemented.", 
            "title": "Plugin Ideas"
        }, 
        {
            "location": "/concept/#example-construction-concept", 
            "text": "I created a new plugin called  ConstructionPlugin  to\nreduce the time taken to take hundreds of images at construction sites.  The idea is to use a separate application to create a route of rooms.\nThe plugin then saves unique files names for each room.   As a first step, the plugin saves the construction images\nwith a file name prefaced by  construction .   I then created a directory called  Construction  to store\nall my construction pictures for business \nseparately from the normal camera pictures stored in  100RICOH .\nI am using a more scalable naming convention of the form\n  room01sect01.jpg .  In  MainFragment.java , I changed the file save location.  private Camera.PictureCallback mJpegPictureCallback = new Camera.PictureCallback() {\n    @Override\n    public void onPictureTaken(byte[] data, Camera camera) {\n        mParameters.set(\"RIC_PROC_STITCHING\", \"RicStaticStitching\");\n        mCamera.setParameters(mParameters);\n        mCamera.stopPreview();\n\n        String fileUrl = \"/storage/emulated/0/DCIM/Construction/room01sect01.jpg\";\n        try (FileOutputStream fileOutputStream = new FileOutputStream(fileUrl)) {\n            fileOutputStream.write(data);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        mCamera.startPreview();\n    }\n};  Using  adb shell , I can log into the camera and make sure that it's saving the file in the correct filename format and directory. On the camera, you can access it in  /mnt/sdcard/DCIM/Construction/   Back on my workstation, I can copy all the construction images from the camera to my workstation with:  $ adb pull /sdcard/DCIM/Construction/   In this test, transferring 13 images took 1.9 seconds using a USB cable. \nThe files total 42 MB. Each image has a resolution of 5376x2896. \nOnce I have the image on my workstation, I can then open the image up in a file browser to\nsee it in equirectangular format.    My code snippet now looks like this:  if (roomNumber   9)\n{\n    roomNumberStr = Integer.toString(roomNumber);\n} else {\n    roomNumberStr = \"0\" + Integer.toString(roomNumber);\n\n}\n\n\nString fileUrl = \"/storage/emulated/0/DCIM/Construction/room\" + roomNumberStr + \"sect01.jpg\";\ntry (FileOutputStream fileOutputStream = new FileOutputStream(fileUrl)) {\n    fileOutputStream.write(data);\n    roomNumber = roomNumber + 1;", 
            "title": "Example Construction Concept"
        }, 
        {
            "location": "/community/", 
            "text": "Community\n\n\nThere is a very active and fun community around the RICOH THETA V development. Check out \n\ntheta360.guide\n now.\n\n\ncommunity.theta360.guide\n\n\nThe main hub THETA developer discussion is the independent developer community at \ncommunity.theta360.guide\n. There are more than\na 1,000 registered THETA developers on the community\nsite viewing 70,000 pages a month. You do not need to register to read the content, but it would be great if\nyou signed for free and asked a question or shared some information.\n\n\nWe want to hear from you!\n\n\n\n\n\n\nHow to Ask a Question\n\n\nPublic Question\n\n\nGo to the \nTHETA API Usage conference\n.\n\n\nClick on New Topic.\n\n\n\n\nWrite the title of your question and the details in the body.\n\n\n\n\nIf you are new to the community, your question will need to get approved for the first post only.\n\n\nPrivate Question\n\n\nYou can message us directly on https://community.theta360.guide. Or you can send email to jcasman@oppkey.com.\n\n\nEvents, Meetups and Workshops\n\n\nA number of workshops are planned to cover different aspects of plug-in development. We also hold physical and online meetings to explore the booming business around applications for 360 cameras. Here are some of the upcoming events for developers:\n\n\n\n\nVRLA (May 4-5, Los Angeles, CA)\n\n\nDeveloperWeek (June 18-20, New York City, NY)\n\n\nTechCrunch DISRUPT (Sept 5-7, San Francisco, CA)\n\n\n\n\n\n\nThe \nRICOH THETA Developers SF Bay Area Meetup Group\n is the \nmost active.\n\n\nMarketing and Sales Questions\n\n\nIf you have questions about marketing and selling your application, Jesse Casman can relay your question to the appropriate people at Ricoh.  He can also help you get your app onto the THETA Plug-in store and provide \ninformation on the process to get your plug-in showcased as a featured app.", 
            "title": "Community"
        }, 
        {
            "location": "/community/#community", 
            "text": "There is a very active and fun community around the RICOH THETA V development. Check out  theta360.guide  now.", 
            "title": "Community"
        }, 
        {
            "location": "/community/#communitytheta360guide", 
            "text": "The main hub THETA developer discussion is the independent developer community at  community.theta360.guide . There are more than\na 1,000 registered THETA developers on the community\nsite viewing 70,000 pages a month. You do not need to register to read the content, but it would be great if\nyou signed for free and asked a question or shared some information.  We want to hear from you!", 
            "title": "community.theta360.guide"
        }, 
        {
            "location": "/community/#how-to-ask-a-question", 
            "text": "", 
            "title": "How to Ask a Question"
        }, 
        {
            "location": "/community/#public-question", 
            "text": "Go to the  THETA API Usage conference .  Click on New Topic.   Write the title of your question and the details in the body.   If you are new to the community, your question will need to get approved for the first post only.", 
            "title": "Public Question"
        }, 
        {
            "location": "/community/#private-question", 
            "text": "You can message us directly on https://community.theta360.guide. Or you can send email to jcasman@oppkey.com.", 
            "title": "Private Question"
        }, 
        {
            "location": "/community/#events-meetups-and-workshops", 
            "text": "A number of workshops are planned to cover different aspects of plug-in development. We also hold physical and online meetings to explore the booming business around applications for 360 cameras. Here are some of the upcoming events for developers:   VRLA (May 4-5, Los Angeles, CA)  DeveloperWeek (June 18-20, New York City, NY)  TechCrunch DISRUPT (Sept 5-7, San Francisco, CA)    The  RICOH THETA Developers SF Bay Area Meetup Group  is the \nmost active.", 
            "title": "Events, Meetups and Workshops"
        }, 
        {
            "location": "/community/#marketing-and-sales-questions", 
            "text": "If you have questions about marketing and selling your application, Jesse Casman can relay your question to the appropriate people at Ricoh.  He can also help you get your app onto the THETA Plug-in store and provide \ninformation on the process to get your plug-in showcased as a featured app.", 
            "title": "Marketing and Sales Questions"
        }
    ]
}